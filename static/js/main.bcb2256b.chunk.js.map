{"version":3,"sources":["App.tsx","components/GoodsList.tsx","index.tsx"],"names":["SortType","GoodsList","goods","map","good","goodsFromServer","App","useState","isReversed","setReverse","NONE","sortType","setSortType","visibleGoods","sort","g1","g2","ALPHABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","classNames","onClick","ReactDOM","render","document","getElementById"],"mappings":"6KAmBKA,E,0ECbQC,EAA6B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC3C,OACE,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAAe,UAAQ,OAAvB,SACGA,GADMA,SDJJC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGL,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAgCE,IAAMM,EAAgB,WAC3B,MAAiCC,oBAAS,GAA1C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAASP,EAASU,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACMC,EA7BD,SACLX,EACAS,EACAH,GAEA,IAAMK,EAAY,YAAOX,GAkBzB,OAhBAW,EAAaC,MAAK,SAACC,EAAIC,GACrB,OAAIL,IAAaX,EAASiB,SACjBF,EAAGG,cAAcF,GAGtBL,IAAaX,EAASmB,OACjBJ,EAAGK,OAASJ,EAAGI,OAGjBpB,EAASU,QAGdF,GACFK,EAAaQ,UAGRR,EAMcS,CAAkBjB,EAAiBM,EAAUH,GAOlE,OACE,sBAAKe,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,iBACpB,CAAE,WAAYd,IAAaX,EAASiB,WACtCS,QAAS,kBAAMd,EAAYZ,EAASiB,WAJtC,iCASA,wBACEO,KAAK,SACLD,UAAWE,IAAW,oBACpB,CAAE,WAAYd,IAAaX,EAASmB,SACtCO,QAAS,kBAAMd,EAAYZ,EAASmB,SAJtC,4BASA,wBACEK,KAAK,SACLD,UAAWE,IAAW,oBACpB,CAAE,YAAajB,IACjBkB,QAAS,kBAAMjB,GAAYD,IAJ7B,sBASEG,IAAaX,EAASU,MAAQF,IAE5B,wBACEgB,KAAK,SACLD,UAAU,4BACVG,QAxCK,WACfd,EAAYZ,EAASU,MACrBD,GAAW,IAmCH,sBAUN,cAAC,EAAD,CAAWP,MAAOW,QEpGxBc,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.bcb2256b.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\nimport { GoodsList } from './components/GoodsList';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\nexport function getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((g1, g2) => {\n    if (sortType === SortType.ALPHABET) {\n      return g1.localeCompare(g2);\n    }\n\n    if (sortType === SortType.LENGTH) {\n      return g1.length - g2.length;\n    }\n\n    return SortType.NONE;\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setReverse] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const visibleGoods = getReorderedGoods(goodsFromServer, sortType, isReversed);\n\n  const setReset = () => {\n    setSortType(SortType.NONE);\n    setReverse(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames('button is-info',\n            { 'is-light': sortType !== SortType.ALPHABET })}\n          onClick={() => setSortType(SortType.ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button is-success',\n            { 'is-light': sortType !== SortType.LENGTH })}\n          onClick={() => setSortType(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button is-warning',\n            { 'is-light': !isReversed })}\n          onClick={() => setReverse(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {(sortType !== SortType.NONE || isReversed)\n          && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={setReset}\n            >\n              Reset\n            </button>\n          )}\n      </div>\n\n      <GoodsList goods={visibleGoods} />\n    </div>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  goods: string[];\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => {\n  return (\n    <ul>\n      {goods.map(good => (\n        <li key={good} data-cy=\"Good\">\n          {good}\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}